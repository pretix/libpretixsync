buildscript {
    ext.kotlin_version = '1.3.50'

    repositories {
        google()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.21"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.11"
    }
}

plugins {
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}
apply plugin: 'java-library'
apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'jacoco'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'idea'
apply plugin: 'com.google.protobuf'

group 'eu.pretix.pretixdesk'
version '1.0'

buildConfig {
    appName = "libpretixsync"
    version = "0.0"
    clsName = 'BuildConfig'
    packageName = "eu.pretix.libpretixsync"
    charset = 'UTF-8'
    buildConfigField 'String', 'BOOLEAN_FALSE', '0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    // https://github.com/gradle/gradle/issues/12126
    // https://github.com/google/protobuf-gradle-plugin/issues/391
    compileProtoPath {
        attributes {
            attribute(Usage.USAGE_ATTRIBUTE, project.objects.named(Usage, Usage.JAVA_API))
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite {}
            }
        }
    }
}

check.dependsOn jacocoTestReport

dependencies {
    compile 'com.squareup.okhttp3:okhttp:4.3.0'
    compile 'io.requery:requery:1.6.0'
    compile 'io.requery:requery-kotlin:1.6.0'
    compile 'joda-time:joda-time:2.9.9'

    // Use older org.json version to have an environment equivalent to the android platform
    compile 'org.json:json:20090211'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'net.sourceforge.streamsupport:streamsupport-cfuture:1.7.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.1'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.10.1'

    implementation 'commons-codec:commons-codec:1.15'
    implementation 'net.i2p.crypto:eddsa:0.3.0'
    implementation 'com.google.protobuf:protobuf-lite:3.0.0'

    annotationProcessor 'io.requery:requery-processor:1.6.0'
    kapt 'io.requery:requery-processor:1.6.0'
    annotationProcessor 'javax.annotation:jsr250-api:1.0'

    testCompile 'junit:junit:4.12'
    testCompile 'org.xerial:sqlite-jdbc:3.30.1'
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources", "${projectDir}/src/main/resources"
    into "${buildDir}/classes/test"
}
processTestResources.dependsOn copyTestResources
