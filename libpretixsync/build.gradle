buildscript {
    ext.kotlin_version = '1.5.30'

    repositories {
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.17"
    }
}

plugins {
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}
apply plugin: 'java-library'
apply plugin: 'jacoco'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'idea'
apply plugin: 'com.google.protobuf'

group 'eu.pretix.pretixdesk'
version '1.0'

buildConfig {
    appName = "libpretixsync"
    version = "0.0"
    clsName = 'BuildConfig'
    packageName = "eu.pretix.libpretixsync"
    charset = 'UTF-8'
    buildConfigField 'String', 'DB', 'sqlite'
    buildConfigField 'String', 'BOOLEAN_TYPE', 'NUMERIC'
    buildConfigField 'String', 'BOOLEAN_FALSE', '0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    maybeCreate("compile")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

jacoco {
    toolVersion = "0.8.7"
}
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        javalite {
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite {}
            }
        }
    }
}

check.dependsOn jacocoTestReport

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'io.requery:requery:1.6.0'
    implementation 'io.requery:requery-kotlin:1.6.0'
    implementation 'joda-time:joda-time:2.10.10'

    // Use older org.json version to have an environment equivalent to the android platform
    implementation 'org.json:json:20090211'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'net.sourceforge.streamsupport:streamsupport-cfuture:1.7.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.0'

    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    implementation 'net.i2p.crypto:eddsa:0.3.0'
    implementation 'com.google.protobuf:protobuf-lite:3.0.1'

    kapt 'io.requery:requery-processor:1.6.0'
    annotationProcessor 'javax.annotation:jsr250-api:1.0'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.xerial:sqlite-jdbc:3.36.0.1'

    implementation 'dev.samstevens.totp:totp:1.7.1'
}

task copyTestResources(type: Copy) {
    from "${projectDir}/src/test/resources", "${projectDir}/src/main/resources"
    into "${buildDir}/classes/test"
}
processTestResources.dependsOn copyTestResources

sourceSets {
    main {
        java.srcDirs += file("$buildDir/generated/source/kapt/main")
        kotlin.srcDirs += file("$buildDir/generated/source/kapt/main")
    }
}
